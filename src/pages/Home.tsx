import { useEffect, useState } from "react";
import logo from '../assets/react.svg';

export const HomePage = () => {
  const [deferredPrompt, setDeferredPrompt] = useState<any>(null);
  const [isInstalled, setIsInstalled] = useState(false);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    const checkInstallation = () => {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è iOS
      const isIOSInstalled =
        // @ts-expect-error - navigator.standalone is not defined in the global scope
        window.navigator.standalone ||
        window.matchMedia('(display-mode: standalone)').matches;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è Android/Desktop —á–µ—Ä–µ–∑ display-mode
      const isStandalone = window.matchMedia('(display-mode: standalone)').matches;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ getInstalledRelatedApps (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
      if ('getInstalledRelatedApps' in navigator) {
        (navigator as unknown as any).getInstalledRelatedApps().then((apps: any[]) => {
          setIsInstalled(apps.length > 0 || isIOSInstalled || isStandalone);
        });
      } else {
        setIsInstalled(isIOSInstalled || isStandalone);
      }
    };

    checkInstallation();

    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const displayModeQuery = window.matchMedia('(display-mode: standalone)');
    const handleDisplayModeChange = (e: MediaQueryListEvent) => {
      setIsInstalled(e.matches);
    };
    displayModeQuery.addEventListener('change', handleDisplayModeChange);

    const handleBeforeInstallPrompt = (e: Event) => {
      e.preventDefault();
      setDeferredPrompt(e);
    };

    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);

    return () => {
      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
    };
  }, []);

  const installPWA = async () => {
    if (deferredPrompt) {
      (deferredPrompt as any).prompt();
      const { outcome } = await (deferredPrompt as any).userChoice;
      if (outcome === 'accepted') {
        setDeferredPrompt(null);
      }
    }
  };

  return <section className="flex flex-col items-center justify-between h-full p-4">
    <h3>–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h3>
    <div className="flex flex-col gap-4 border-2 border-primary rounded-xl p-4">
      <div className="flex gap-4 items-center">
        <img src={logo} alt="logo" className="w-10 h-10" />
        <p>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä</p>
      </div>
      <p className="text-center">{isInstalled ? '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ‚úÖ' : '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ‚ùå'}</p>
      {!isInstalled && (
        <>
          {deferredPrompt ? (
            <button
              onClick={installPWA}
              className="
          btn btn-primary btn-sm
          p-2 bg-primary text-white
          border-none rounded-md cursor-pointer text-sm
          "
            >
              –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üì≤
            </button>
          ) : (
            <div className="text-sm text-center">
              {/iPhone|iPad|iPod/.test(navigator.userAgent) ? (
                <p>
                  –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" (Share) –≤ –±—Ä–∞—É–∑–µ—Ä–µ Safari,<br />
                  –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ "–ù–∞ —ç–∫—Ä–∞–Ω ¬´–î–æ–º–æ–π¬ª" (Add to Home Screen)
                </p>
              ) : (
                <p>
                  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                </p>
              )}
            </div>
          )}
        </>
      )}
    </div>
  </section>;
};